apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: cloudflare
spec:
  releaseName: cloudflare
  chart:
    spec:
      chart: cloudflare
      sourceRef:
        kind: HelmRepository
        name: cloudflare
  interval: 50m
  install:
    remediation:
      retries: 3
  # Variables injected into the chart from an existing secret, the release will generate another secret cloudflare-tunnel uses
  valuesFrom:
    - kind: Secret
      name: cloudflare-credentials
      valuesKey: account
      targetPath: cloudflare.account
    - kind: Secret
      name: cloudflare-credentials
      valuesKey: tunnelName
      targetPath: cloudflare.tunnelName
    - kind: Secret
      name: cloudflare-credentials
      valuesKey: tunnelId
      targetPath: cloudflare.tunnelId
    - kind: Secret
      name: cloudflare-credentials
      valuesKey: secret
      targetPath: cloudflare.secret
  values:
    # Cloudflare parameters will be injected from secret
    cloudflare:
      # If defined, no secret is created for the credentials, and instead, the secret referenced is used
      secretName: null
      # If true, turn on WARP routing for TCP
      enableWarp: false
      # Define ingress rules for the tunnel. See
      # https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/configuration/configuration-file/ingress
      ingress: []
        # The first rule proxies traffic to the httpbin sample service named web-server at port 80
        # - hostname: tunnel.example.com
        #  service: http://web-service:80
        # This rule sends traffic to the built-in hello-world HTTP server. This can help debug connectivity
        # issues. If hello.example.com resolves and tunnel.example.com does not, then the problem is
        # in the connection from cloudflared to your local service, not from the internet to cloudflared.
        # - hostname: hello.example.com
        #   service: hello_world

    image:
      repository: cloudflare/cloudflared
      pullPolicy: IfNotPresent
      # If supplied, this overrides "appVersion"
      tag: "2024.8.3"

    replicaCount: 2

    imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""

    serviceAccount:
      # Annotations to add to the service account
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""

    podAnnotations: {}
    podLabels: {}

    # Security items common to everything in the pod.  Here we require that it
    # does not run as the user defined in the image, literally named "nonroot".
    podSecurityContext:
      runAsNonRoot: true
      runAsUser: 65532

    # Security items for one container. We lock it down.
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true

    resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi

    nodeSelector: {}

    tolerations: []

    # Default affinity is to spread out over nodes; use this to override.
    affinity: {}
